{
  "name": "exec-php",
  "version": "0.0.3",
  "description": "Execute PHP function within NodeJS application",
  "main": "index.js",
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/iqbalfn/exec-php.git"
  },
  "keywords": [
    "nodejs",
    "javascript",
    "php"
  ],
  "author": {
    "name": "Iqbal Fauzi"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/iqbalfn/exec-php/issues"
  },
  "homepage": "https://github.com/iqbalfn/exec-php",
  "dependencies": {
    "tmp": "0.0.24"
  },
  "devDependencies": {
    "should": "^4.0.4"
  },
  "readme": "exec-php\n========\n\nExecute PHP function within NodeJS application\n\nInstall\n-------\n\n    $ npm install exec-php\n\nUsage\n-----\n\n    var execPhp = require('exec-php');\n\n    execPhp('path/to/php/file.php', '/path/to/php/bin/php', function(error, php, output){\n        // php now contain user defined php functions.\n        php.my_own_php_function(arg1, arg2, function(error, result, output, printed){\n            // `result` is return value of `my_own_php_function` php function.\n            \n        });\n    });\n\nexec-php arguments\n------------------\n\n1. `String`. Path to user php file.\n2. `String`. Path to machine php bin file.\n3. `Function`. Callback function after creating `exec-php` object. This function will get called with below arguments :\n\nThe `Function` arguments called with this arguments:\n\n1. `Mixed`. Error message.\n2. `Object`. Exec-php object that contain all user php defined function.\n3. `String`. Printed string when requiring user php file.\n    \nexec-php object\n---------------\n\nAll user function defined on user php file will be appended to exec-php object.\nCall it normally with the last argument is callback function. The callback \nfunction called with below arguments :\n\n1. `Mixed`. Error message.\n2. `Mixed`. Returned value of user php function.\n3. `String`. Printed string of php file when requiring it.\n4. `String`. Printed string of php function when calling it.\n\nExample\n-------\n\n    // file.php\n    <?php\n        \n        echo \"One\";\n        function my_function($arg1, $arg2){\n            echo \"Two\";\n            return $arg1 + $arg2;\n        }\n    \n    \n    \n    // app.js\n    var execPhp = require('exec-php');\n    \n    execPhp('file.php', function(error, php, outprint){\n        // outprint is now `One'.\n        \n        php.my_function(1, 2, function(err, result, output, printed){\n            // result is now `3'\n            // output is now `One'.\n            // printed is now `Two'.\n        });\n    });\n\nNote\n----\n\nAll uppercase function name on PHP will be converted to lowercase on `exec-php`.\n\n    // file.php\n    <?php\n    \n        function MyFunction($a, $b){ return $a + $b; }\n    \n    // app.js \n    var execPhp = require('exec-php');\n    \n    execPhp('file.php', function(error, php, outprint){\n        php.myfunction(1, 2, function(error, result){\n            // result is now 3\n        });\n    });\n\nChangeLog\n---------\n\n1. 0.0.3  \n   Handle PHP throw error exception.",
  "readmeFilename": "README.md",
  "_id": "exec-php@0.0.3",
  "dist": {
    "shasum": "9db212e8b12af707c107f0bca802b60a3b2580d5"
  },
  "_from": "exec-php@",
  "_resolved": "https://registry.npmjs.org/exec-php/-/exec-php-0.0.3.tgz"
}
